<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="communityDAO">

	<!-- 게시글 작성 : 오송민 -->
	<insert id = "insertCommunity" parameterType="community">
		INSERT INTO BOARDS(BOARD_IDX, MEMBER_IDX, CATE_IDX, TITLE, CONTENT
		, HIT, REG_DATE, BOARD_ORI, BOARD_FILE)
		VALUES (BOARD_SEQ.NEXTVAL, #{memberIdx}, #{cateIdx}, #{title}, #{content}
		, 0, SYSDATE, #{boardOri}, #{boardFile})	
	</insert>

	<!-- 게시글 1개 조회 : 오송민 -->
	<select id = "getCommunity" parameterType="community" resultType="community">
		SELECT B.*, M.NICKNAME, C.CATE_NAME
		FROM BOARDS B
		JOIN MEMBERS M ON B.MEMBER_IDX = M.MEMBER_IDX
		JOIN CATEGORYS C ON B.CATE_IDX = C.CATE_IDX
		WHERE B.BOARD_IDX = #{boardIdx}
	</select>
	
	<!-- 게시글 삭제 : 오송민 -->
	<delete id = "deleteCommunity" parameterType="community">
		DELETE FROM BOARDS WHERE BOARD_IDX = #{boardIdx} 
	</delete>
	
	<!-- 게시글 수정 : 오송민 -->
	<update id = "updateCommunity" parameterType="community">
		UPDATE BOARDS
		SET CATE_IDX = ${cateIdx},
			TITLE = #{title},
			CONTENT = #{content},
			REG_DATE = SYSDATE,
			BOARD_ORI= #{boardOri},
			BOARD_FILE = #{boardFile} 
		WHERE BOARD_IDX = #{boardIdx}
	</update>
	
	<!-- 조회수 1 증가 : 오송민 -->
	<update id = "increaseHit" parameterType="community">
		UPDATE BOARDS
		SET HIT = HIT + 1
		WHERE BOARD_IDX = #{boardIdx}
	</update>
	
	<!-- 전체 게시글 조회 (페이징 처리) : 오송민 -->
	<select id="getCommunityPagingList" parameterType="java.util.HashMap" resultType="community">
	    <![CDATA[
	    	SELECT F.*
			FROM (
    			SELECT A.*, ROWNUM AS CNUM
    			FROM (
        			SELECT B.*, M.NICKNAME, C.CATE_NAME
        			FROM BOARDS B
        			JOIN MEMBERS M ON B.MEMBER_IDX = M.MEMBER_IDX
					JOIN CATEGORYS C ON B.CATE_IDX = C.CATE_IDX
					WHERE B.CATE_IDX > 100 AND B.CATE_IDX < 200
					ORDER BY BOARD_IDX DESC
        		) A
			) F	
			WHERE F.CNUM > #{start} AND F.CNUM <= (#{start} + #{limit})
	    ]]>
	</select>
	
	<!-- 전체 게시글 개수 구하기 : 오송민 -->
	<select id = "communityBoardCount" resultType="Integer">
		<![CDATA[
			SELECT COUNT(BOARD_IDX) FROM BOARDS
			WHERE CATE_IDX > 100 AND CATE_IDX < 200
		]]>
	</select>
	
	<!-- 해당 카테고리 게시글만 조회 : 오송민 -->
	<select id = "getCommunityPagingListByCate" parameterType="java.util.HashMap" resultType="community">
	    <![CDATA[
	    	SELECT F.*
			FROM (
			    SELECT A.*, ROWNUM AS CNUM
			    FROM (
			        SELECT B.*, M.NICKNAME, C.CATE_NAME
			        FROM BOARDS B
			        JOIN MEMBERS M ON B.MEMBER_IDX = M.MEMBER_IDX
			        JOIN CATEGORYS C ON B.CATE_IDX = C.CATE_IDX
			        WHERE B.CATE_IDX = #{cateIdx}
			        ORDER BY B.BOARD_IDX DESC
			    ) A
			) F
			WHERE F.CNUM > #{start} AND F.CNUM <= (#{start} + #{limit})
	    ]]>
	</select>
	
	<!-- 해당 카테고리 게시글 개수 구하기 : 오송민 -->
	<select id = "communityBoardCountByCate" parameterType="int" resultType="Integer">
		SELECT COUNT(BOARD_IDX) FROM BOARDS WHERE CATE_IDX = #{cateIdx}
	</select>
	
	<!-- 커뮤니티 카테고리 조회 -->
	<select id = "getCommunityCate" resultType="cate">
		<![CDATA[
			SELECT *
			FROM CATEGORYS
			WHERE CATE_IDX > 100 AND CATE_IDX < 200
		]]>
	</select>
	
	<!-- selCateIdx에 맞는 cateName 가져오기 -->
	<select id = "getSelCateName" parameterType="int" resultType="String">
		SELECT CATE_NAME
		FROM CATEGORYS
		WHERE CATE_IDX = #{cateIdx}
	</select>
	
	<!-- boardIdx에 맞는 이미지 삭제 -->
	<update id = "deleteCommunityImg" parameterType="int">
		UPDATE BOARDS
		SET BOARD_ORI = NULL, 
			BOARD_FILE = NULL
		WHERE BOARD_IDX = #{boardIdx}
	</update>
	
	<!-- 조회수 top10 게시글 조회 -->
	<select id = "getHotCommunityList" resultType = "community">
		<![CDATA[
			SELECT * FROM (
	    		SELECT * FROM BOARDS
	    		WHERE CATE_IDX > 100 AND CATE_IDX < 200
	    		ORDER BY HIT DESC
			) WHERE ROWNUM <= 10
		]]>
	</select>
	
	<!-- title 검색 -->
	<select id = "getSearchCommunityList_T" parameterType="java.util.HashMap" resultType="community">
		<![CDATA[
	    	SELECT F.*
			FROM (
    			SELECT A.*, ROWNUM AS CNUM
    			FROM (
        			SELECT B.*, M.NICKNAME, C.CATE_NAME
        			FROM BOARDS B
        			JOIN MEMBERS M ON B.MEMBER_IDX = M.MEMBER_IDX
					JOIN CATEGORYS C ON B.CATE_IDX = C.CATE_IDX
					WHERE B.CATE_IDX > 100 AND B.CATE_IDX < 200
					AND B.TITLE LIKE '%'|| #{searchKeyword} ||'%'
					ORDER BY BOARD_IDX DESC
        		) A
			) F	
			WHERE F.CNUM > #{start} AND F.CNUM <= (#{start} + #{limit})
	    ]]>
	</select>
	
	<!-- title 검색 후 게시글 개수 조회 -->
	<select id = "communityBoardCountByKeywordTitle" parameterType="String" resultType = "Integer">
		<![CDATA[
			SELECT COUNT(*)
			FROM BOARDS
			WHERE TITLE LIKE '%'|| #{searchKeyword} ||'%'
			AND CATE_IDX > 100 AND CATE_IDX < 200
		]]>
	</select>
	
	<!-- content 검색 -->
  	<select id = "getSearchCommunityList_C" parameterType="java.util.HashMap" resultType="community">
  		<![CDATA[
	    	SELECT F.*
			FROM (
    			SELECT A.*, ROWNUM AS CNUM
    			FROM (
        			SELECT B.*, M.NICKNAME, C.CATE_NAME
        			FROM BOARDS B
        			JOIN MEMBERS M ON B.MEMBER_IDX = M.MEMBER_IDX
					JOIN CATEGORYS C ON B.CATE_IDX = C.CATE_IDX
					WHERE B.CATE_IDX > 100 AND B.CATE_IDX < 200
					AND B.CONTENT LIKE '%'|| #{searchKeyword} ||'%'
					ORDER BY BOARD_IDX DESC
        		) A
			) F	
			WHERE F.CNUM > #{start} AND F.CNUM <= (#{start} + #{limit})
	    ]]>
	</select>
	
</mapper>